- name: Remove MariaDB packages if present
  ansible.builtin.apt:
    name:
      - libmariadb-dev
      - libmariadb3
      - mariadb-common
    state: absent
    purge: true
    autoremove: true
  ignore_errors: true

- name: Ensure dependencies are installed
  ansible.builtin.apt:
    name:
      - gnupg
      - lsb-release
      - wget
    state: present
    update_cache: true

- name: Download Percona release package
  ansible.builtin.get_url:
    url: https://repo.percona.com/apt/percona-release_latest.bullseye_all.deb
    dest: /tmp/percona-release.deb
    mode: '0644'

- name: Install Percona release package
  ansible.builtin.apt:
    deb: /tmp/percona-release.deb

- name: Enable Percona Server
  ansible.builtin.command: percona-release enable ps-57 release
  args:
    creates: /etc/apt/sources.list.d/percona-ps-57.list

- name: Update APT cache after enabling Percona repo
  ansible.builtin.apt:
    update_cache: true

- name: Preseed Percona root password
  ansible.builtin.shell: |
    echo "percona-server-server-5.7 percona-server-server/root_password password {{ mysql_root_password }}" | debconf-set-selections
    echo "percona-server-server-5.7 percona-server-server/root_password_again password {{ mysql_root_password }}" | debconf-set-selections
  args:
    executable: /bin/bash

- name: Install Percona Server for MySQL 5.7
  ansible.builtin.apt:
    name:
      - percona-server-server-5.7
      - percona-server-client-5.7
      - percona-server-common-5.7
    state: present
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Ensure MySQL service is started
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: true

- name: Verify MySQL root password works
  ansible.builtin.shell: |
    mysql -uroot -p{{ mysql_root_password }} -e "SELECT VERSION();"
  register: mysql_check
  failed_when: "'ERROR' in mysql_check.stderr"
  changed_when: false    

- name: Print MySQL version query result
  ansible.builtin.debug:
    msg: "{{ mysql_check.stdout }}"


